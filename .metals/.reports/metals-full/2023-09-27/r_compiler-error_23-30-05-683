java.lang.IndexOutOfBoundsException: 0
occurred in the presentation compiler.

action parameters:
offset: 471
uri: file://<WORKSPACE>/src/main/scala/deMux/deMux.scala
text:
package deMux

import chisel3._
import chisel3.util._

class deMux(width: Int) extends Module { //1to2
    val io = IO(new Bundle {
        val sel        = Input(UInt(1.W))
        val in         = Input(UInt(width.W))
        val d1         = Output(UInt(width.W))
        val d2         = Output(UInt(width.W))
    })



    val notSel = ~io.sel

    when(in != 0){
        when(notSel & io.in){
            io.d1 := io.in
            io.d2 := 0.U
        }.elsewhen()@@{
            io.d2 := io.sel & io.in
        }
        
    }.elsewhen{
        io.d1 := 0.U
        io.d1 := 0.U
    }

    //if t1=1 t1=in
    //elif t2=1 t2=in

    // when(t1 === 1.U){
    //     t1 = io.in
    // }.elsewhen(t2 === 1.U){
    //     t2 = io.in
    // }

    io.d1 := notSel & io.in
    io.d2 := io.sel & io.in
}

class deMux1to4(width: Int) extends Module { //1to4
    val io = IO(new Bundle {
        val s0         = Input(UInt(1.W))
        val s1         = Input(UInt(1.W))
        val in         = Input(UInt(width.W))
        val o1         = Output(UInt(width.W))
        val o2         = Output(UInt(width.W))
        val o3         = Output(UInt(width.W))
        val o4         = Output(UInt(width.W))
    })

    val dm1 = Module(new deMux(width))

    dm1.io.sel := io.s0
    dm1.io.in := io.in

    val dm2 = Module(new deMux(width))
    val dm3 = Module(new deMux(width))

    dm2.io.sel := io.s1
    dm3.io.sel := io.s1

    dm2.io.in := dm1.io.d1
    dm3.io.in := dm1.io.d2

    io.o1 := dm2.io.d1
    io.o2 := dm2.io.d2

    io.o3 := dm3.io.d1
    io.o4 := dm3.io.d2

}


error stacktrace:
scala.collection.LinearSeqOps.apply(LinearSeq.scala:131)
	scala.collection.LinearSeqOps.apply$(LinearSeq.scala:128)
	scala.collection.immutable.List.apply(List.scala:79)
	dotty.tools.dotc.util.Signatures$.countParams(Signatures.scala:501)
	dotty.tools.dotc.util.Signatures$.applyCallInfo(Signatures.scala:186)
	dotty.tools.dotc.util.Signatures$.computeSignatureHelp(Signatures.scala:94)
	dotty.tools.dotc.util.Signatures$.signatureHelp(Signatures.scala:63)
	scala.meta.internal.pc.MetalsSignatures$.signatures(MetalsSignatures.scala:17)
	scala.meta.internal.pc.SignatureHelpProvider$.signatureHelp(SignatureHelpProvider.scala:51)
	scala.meta.internal.pc.ScalaPresentationCompiler.signatureHelp$$anonfun$1(ScalaPresentationCompiler.scala:371)
